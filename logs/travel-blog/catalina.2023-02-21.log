2023-02-21 01:18:30,982 [restartedMain] INFO  com.market.online.Application 50 - Starting Application on MANH with PID 21460 (F:\dev\source\webtraodoisp\target\classes started by manhn in F:\dev\source\webtraodoisp)
2023-02-21 01:18:30,996 [restartedMain] INFO  com.market.online.Application 652 - The following profiles are active: local
2023-02-21 01:18:31,166 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor 225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-02-21 01:18:31,166 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor 225 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-02-21 01:18:33,066 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate 126 - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-02-21 01:18:33,265 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate 182 - Finished Spring Data repository scanning in 188ms. Found 19 repository interfaces.
2023-02-21 01:18:33,992 [restartedMain] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bea12acb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-02-21 01:18:35,081 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 90 - Tomcat initialized with port(s): 8888 (http)
2023-02-21 01:18:35,100 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol 173 - Initializing ProtocolHandler ["http-nio-8888"]
2023-02-21 01:18:35,118 [restartedMain] INFO  org.apache.catalina.core.StandardService 173 - Starting service [Tomcat]
2023-02-21 01:18:35,119 [restartedMain] INFO  org.apache.catalina.core.StandardEngine 173 - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-02-21 01:18:35,985 [restartedMain] INFO  org.apache.jasper.servlet.TldScanner 173 - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-02-21 01:18:36,034 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] 173 - Initializing Spring embedded WebApplicationContext
2023-02-21 01:18:36,035 [restartedMain] INFO  org.springframework.web.context.ContextLoader 284 - Root WebApplicationContext: initialization completed in 4868 ms
2023-02-21 01:18:36,581 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource 110 - HikariPool-1 - Starting...
2023-02-21 01:18:36,744 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource 123 - HikariPool-1 - Start completed.
2023-02-21 01:18:36,929 [restartedMain] INFO  org.hibernate.jpa.internal.util.LogHelper 31 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-02-21 01:18:37,079 [restartedMain] INFO  org.hibernate.Version 46 - HHH000412: Hibernate Core {5.3.13.Final}
2023-02-21 01:18:37,079 [restartedMain] INFO  org.hibernate.cfg.Environment 213 - HHH000206: hibernate.properties not found
2023-02-21 01:18:37,390 [restartedMain] INFO  org.hibernate.annotations.common.Version 49 - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-02-21 01:18:37,722 [restartedMain] INFO  org.hibernate.dialect.Dialect 157 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-02-21 01:18:39,539 [restartedMain] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean 416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-02-21 01:18:40,235 [restartedMain] INFO  org.hibernate.hql.internal.QueryTranslatorFactoryInitiator 47 - HHH000397: Using ASTQueryTranslatorFactory
2023-02-21 01:18:41,770 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor 171 - Initializing ExecutorService 'clientInboundChannelExecutor'
2023-02-21 01:18:41,779 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor 171 - Initializing ExecutorService 'clientOutboundChannelExecutor'
2023-02-21 01:18:42,480 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler 171 - Initializing ExecutorService 'messageBrokerTaskScheduler'
2023-02-21 01:18:42,595 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor 171 - Initializing ExecutorService 'brokerChannelExecutor'
2023-02-21 01:18:44,121 [restartedMain] INFO  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer 57 - LiveReload server is running on port 35729
2023-02-21 01:18:44,276 [restartedMain] INFO  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler 137 - Starting...
2023-02-21 01:18:44,276 [restartedMain] INFO  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler 137 - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-02-21 01:18:44,276 [restartedMain] INFO  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler 137 - Started.
2023-02-21 01:18:44,296 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol 173 - Starting ProtocolHandler ["http-nio-8888"]
2023-02-21 01:18:44,342 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 202 - Tomcat started on port(s): 8888 (http) with context path ''
2023-02-21 01:18:44,342 [restartedMain] INFO  com.market.online.Application 59 - Started Application in 13.963 seconds (JVM running for 14.856)
2023-02-21 01:19:42,607 [MessageBroker-1] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2023-02-21 09:58:02,528 [restartedMain] INFO  com.market.online.Application 50 - Starting Application on MANH with PID 27540 (F:\dev\source\webtraodoisp\target\classes started by manhn in F:\dev\source\webtraodoisp)
2023-02-21 09:58:02,533 [restartedMain] INFO  com.market.online.Application 652 - The following profiles are active: local
2023-02-21 09:58:02,645 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor 225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-02-21 09:58:02,646 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor 225 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-02-21 09:58:05,024 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate 126 - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-02-21 09:58:05,338 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate 182 - Finished Spring Data repository scanning in 299ms. Found 19 repository interfaces.
2023-02-21 09:58:06,690 [restartedMain] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9514b39] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-02-21 09:58:08,345 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 90 - Tomcat initialized with port(s): 8888 (http)
2023-02-21 09:58:08,391 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol 173 - Initializing ProtocolHandler ["http-nio-8888"]
2023-02-21 09:58:08,507 [restartedMain] INFO  org.apache.catalina.core.StandardService 173 - Starting service [Tomcat]
2023-02-21 09:58:08,508 [restartedMain] INFO  org.apache.catalina.core.StandardEngine 173 - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-02-21 09:58:09,207 [restartedMain] INFO  org.apache.jasper.servlet.TldScanner 173 - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-02-21 09:58:09,239 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] 173 - Initializing Spring embedded WebApplicationContext
2023-02-21 09:58:09,240 [restartedMain] INFO  org.springframework.web.context.ContextLoader 284 - Root WebApplicationContext: initialization completed in 6593 ms
2023-02-21 09:58:09,606 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource 110 - HikariPool-1 - Starting...
2023-02-21 09:58:12,755 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool 574 - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:320)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:357)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$28280da8.CGLIB$jpaVendorAdapter$4(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$28280da8$$FastClassBySpringCGLIB$$b33597e6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$28280da8.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$123/718165723.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1255)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1175)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$123/718165723.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1255)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1175)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$123/718165723.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204)
	at com.market.online.Application.main(Application.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 84 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 86 common frames omitted
2023-02-21 09:58:12,759 [restartedMain] WARN  org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup 81 - Unable to determine jdbc url from datasource
org.springframework.jdbc.support.MetaDataAccessException: Could not get Connection for extracting meta-data; nested exception is org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:329)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:357)
	at org.springframework.boot.autoconfigure.orm.jpa.DatabaseLookup.getDatabase(DatabaseLookup.java:73)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaProperties.determineDatabase(JpaProperties.java:142)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.jpaVendorAdapter(JpaBaseConfiguration.java:113)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$28280da8.CGLIB$jpaVendorAdapter$4(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$28280da8$$FastClassBySpringCGLIB$$b33597e6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$28280da8.jpaVendorAdapter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:456)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$123/718165723.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1255)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1175)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$123/718165723.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:277)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1255)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1175)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:857)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:760)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$123/718165723.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204)
	at com.market.online.Application.main(Application.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Failed to obtain JDBC Connection; nested exception is java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:82)
	at org.springframework.jdbc.support.JdbcUtils.extractDatabaseMetaData(JdbcUtils.java:320)
	... 70 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	... 71 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 84 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 86 common frames omitted
2023-02-21 09:58:12,781 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource 110 - HikariPool-1 - Starting...
2023-02-21 09:58:15,811 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool 574 - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:324)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:120)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateDefaultDdlAutoProvider.getDefaultDdlAuto(HibernateDefaultDdlAutoProvider.java:42)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.lambda$getVendorProperties$1(HibernateJpaConfiguration.java:132)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$Lambda$439/1259110684.get(Unknown Source)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings.getDdlAuto(HibernateSettings.java:41)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties$$Lambda$440/413254625.get(Unknown Source)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineDdlAuto(HibernateProperties.java:126)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.getAdditionalProperties(HibernateProperties.java:98)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineHibernateProperties(HibernateProperties.java:91)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.getVendorProperties(HibernateJpaConfiguration.java:134)
	at org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration.entityManagerFactory(JpaBaseConfiguration.java:134)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$28280da8.CGLIB$entityManagerFactory$6(<generated>)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$28280da8$$FastClassBySpringCGLIB$$b33597e6.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration$$EnhancerBySpringCGLIB$$28280da8.entityManagerFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:622)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1160)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$123/718165723.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204)
	at com.market.online.Application.main(Application.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 61 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 63 common frames omitted
2023-02-21 09:58:15,901 [restartedMain] INFO  org.hibernate.jpa.internal.util.LogHelper 31 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-02-21 09:58:16,028 [restartedMain] INFO  org.hibernate.Version 46 - HHH000412: Hibernate Core {5.3.13.Final}
2023-02-21 09:58:16,037 [restartedMain] INFO  org.hibernate.cfg.Environment 213 - HHH000206: hibernate.properties not found
2023-02-21 09:58:16,336 [restartedMain] INFO  org.hibernate.annotations.common.Version 49 - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-02-21 09:58:16,704 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource 110 - HikariPool-1 - Starting...
2023-02-21 09:58:19,767 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool 574 - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:180)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1837)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1774)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$123/718165723.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204)
	at com.market.online.Application.main(Application.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 55 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 57 common frames omitted
2023-02-21 09:58:19,770 [restartedMain] WARN  org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator 132 - HHH000342: Could not obtain connection to query metadata : Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
2023-02-21 09:58:19,781 [restartedMain] INFO  org.hibernate.dialect.Dialect 157 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-02-21 09:58:19,797 [restartedMain] INFO  org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl 63 - HHH000422: Disabling contextual LOB creation as connection was null
2023-02-21 09:58:20,857 [restartedMain] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean 416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-02-21 09:58:20,861 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource 110 - HikariPool-1 - Starting...
2023-02-21 09:58:23,927 [restartedMain] ERROR com.zaxxer.hikari.pool.HikariPool 574 - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.springframework.jdbc.datasource.DataSourceUtils.fetchConnection(DataSourceUtils.java:158)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:116)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:79)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:324)
	at org.springframework.boot.jdbc.EmbeddedDatabaseConnection.isEmbedded(EmbeddedDatabaseConnection.java:120)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.lambda$isInitializingDatabase$0(DataSourceInitializedPublisher.java:116)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher$$Lambda$498/1267143940.get(Unknown Source)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateSettings.getDdlAuto(HibernateSettings.java:41)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties$$Lambda$440/413254625.get(Unknown Source)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineDdlAuto(HibernateProperties.java:126)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.getAdditionalProperties(HibernateProperties.java:98)
	at org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties.determineHibernateProperties(HibernateProperties.java:91)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.isInitializingDatabase(DataSourceInitializedPublisher.java:118)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.publishEventIfRequired(DataSourceInitializedPublisher.java:98)
	at org.springframework.boot.autoconfigure.orm.jpa.DataSourceInitializedPublisher.postProcessAfterInitialization(DataSourceInitializedPublisher.java:90)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:429)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.AbstractBeanFactory$$Lambda$123/718165723.getObject(Unknown Source)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:744)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:391)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:312)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1204)
	at com.market.online.Application.main(Application.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 49 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 51 common frames omitted
2023-02-21 09:58:24,405 [restartedMain] INFO  org.hibernate.hql.internal.QueryTranslatorFactoryInitiator 47 - HHH000397: Using ASTQueryTranslatorFactory
2023-02-21 09:58:25,293 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor 171 - Initializing ExecutorService 'clientInboundChannelExecutor'
2023-02-21 09:58:25,301 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor 171 - Initializing ExecutorService 'clientOutboundChannelExecutor'
2023-02-21 09:58:25,611 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler 171 - Initializing ExecutorService 'messageBrokerTaskScheduler'
2023-02-21 09:58:25,690 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor 171 - Initializing ExecutorService 'brokerChannelExecutor'
2023-02-21 09:58:27,402 [restartedMain] INFO  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer 57 - LiveReload server is running on port 35729
2023-02-21 09:58:27,663 [restartedMain] INFO  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler 137 - Starting...
2023-02-21 09:58:27,664 [restartedMain] INFO  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler 137 - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-02-21 09:58:27,667 [restartedMain] INFO  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler 137 - Started.
2023-02-21 09:58:27,691 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol 173 - Starting ProtocolHandler ["http-nio-8888"]
2023-02-21 09:58:27,756 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 202 - Tomcat started on port(s): 8888 (http) with context path ''
2023-02-21 09:58:27,760 [restartedMain] INFO  com.market.online.Application 59 - Started Application in 26.139 seconds (JVM running for 27.436)
2023-02-21 09:59:16,031 [http-nio-8888-exec-10] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] 173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-02-21 09:59:16,031 [http-nio-8888-exec-10] INFO  org.springframework.web.servlet.DispatcherServlet 525 - Initializing Servlet 'dispatcherServlet'
2023-02-21 09:59:16,040 [http-nio-8888-exec-10] INFO  org.springframework.web.servlet.DispatcherServlet 547 - Completed initialization in 9 ms
2023-02-21 09:59:16,105 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 09:59:16,105 [http-nio-8888-exec-10] INFO  com.zaxxer.hikari.HikariDataSource 110 - HikariPool-1 - Starting...
2023-02-21 09:59:19,166 [http-nio-8888-exec-10] ERROR com.zaxxer.hikari.pool.HikariPool 574 - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:505)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1537)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	at org.hibernate.query.Query.getResultList(Query.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at com.sun.proxy.$Proxy133.getResultList(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor$$Lambda$879/401857260.get(Unknown Source)
	at org.springframework.data.repository.util.QueryExecutionConverters$$Lambda$878/278185257.apply(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$$Lambda$877/2110441440.proceedWithInvocation(Unknown Source)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy99.getAllData(Unknown Source)
	at com.market.online.user.service.CategoryService.getAllData(CategoryService.java:21)
	at com.market.online.config.handler.PageInterceptor.preHandle(PageInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 115 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 117 common frames omitted
2023-02-21 09:59:19,170 [http-nio-8888-exec-10] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper 137 - SQL Error: -1, SQLState: 08
2023-02-21 09:59:19,171 [http-nio-8888-exec-10] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper 142 - Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
2023-02-21 09:59:19,185 [http-nio-8888-exec-10] ERROR com.market.online.common.exception.DefaultExceptionAdvice 24 - Exception###: 
org.springframework.dao.DataAccessResourceFailureException: Unable to acquire JDBC Connection; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:254)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy99.getAllData(Unknown Source)
	at com.market.online.user.service.CategoryService.getAllData(CategoryService.java:21)
	at com.market.online.config.handler.PageInterceptor.preHandle(PageInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:109)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:505)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1537)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	at org.hibernate.query.Query.getResultList(Query.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at com.sun.proxy.$Proxy133.getResultList(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor$$Lambda$879/401857260.get(Unknown Source)
	at org.springframework.data.repository.util.QueryExecutionConverters$$Lambda$878/278185257.apply(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$$Lambda$877/2110441440.proceedWithInvocation(Unknown Source)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 58 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	... 102 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 115 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 117 common frames omitted
2023-02-21 09:59:19,190 [http-nio-8888-exec-10] WARN  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver 199 - Resolved [org.springframework.dao.DataAccessResourceFailureException: Unable to acquire JDBC Connection; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection]
2023-02-21 09:59:19,219 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 09:59:19,220 [http-nio-8888-exec-10] INFO  com.zaxxer.hikari.HikariDataSource 110 - HikariPool-1 - Starting...
2023-02-21 09:59:22,256 [http-nio-8888-exec-10] ERROR com.zaxxer.hikari.pool.HikariPool 574 - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:505)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1537)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	at org.hibernate.query.Query.getResultList(Query.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at com.sun.proxy.$Proxy133.getResultList(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor$$Lambda$879/401857260.get(Unknown Source)
	at org.springframework.data.repository.util.QueryExecutionConverters$$Lambda$878/278185257.apply(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$$Lambda$877/2110441440.proceedWithInvocation(Unknown Source)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy99.getAllData(Unknown Source)
	at com.market.online.user.service.CategoryService.getAllData(CategoryService.java:21)
	at com.market.online.config.handler.PageInterceptor.preHandle(PageInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 99 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 101 common frames omitted
2023-02-21 09:59:22,258 [http-nio-8888-exec-10] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper 137 - SQL Error: -1, SQLState: 08
2023-02-21 09:59:22,259 [http-nio-8888-exec-10] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper 142 - Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
2023-02-21 09:59:22,262 [http-nio-8888-exec-10] ERROR com.market.online.common.exception.DefaultExceptionAdvice 24 - Exception###: 
org.springframework.dao.DataAccessResourceFailureException: Unable to acquire JDBC Connection; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:254)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy99.getAllData(Unknown Source)
	at com.market.online.user.service.CategoryService.getAllData(CategoryService.java:21)
	at com.market.online.config.handler.PageInterceptor.preHandle(PageInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:109)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:505)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1537)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	at org.hibernate.query.Query.getResultList(Query.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at com.sun.proxy.$Proxy133.getResultList(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor$$Lambda$879/401857260.get(Unknown Source)
	at org.springframework.data.repository.util.QueryExecutionConverters$$Lambda$878/278185257.apply(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$$Lambda$877/2110441440.proceedWithInvocation(Unknown Source)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 42 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	... 86 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 99 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 101 common frames omitted
2023-02-21 09:59:22,265 [http-nio-8888-exec-10] WARN  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver 199 - Resolved [org.springframework.dao.DataAccessResourceFailureException: Unable to acquire JDBC Connection; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection]
2023-02-21 09:59:25,694 [MessageBroker-1] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 1, completed tasks = 0]
2023-02-21 09:59:28,802 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 09:59:28,803 [http-nio-8888-exec-6] INFO  com.zaxxer.hikari.HikariDataSource 110 - HikariPool-1 - Starting...
2023-02-21 09:59:31,859 [http-nio-8888-exec-6] ERROR com.zaxxer.hikari.pool.HikariPool 574 - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:505)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1537)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	at org.hibernate.query.Query.getResultList(Query.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at com.sun.proxy.$Proxy133.getResultList(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor$$Lambda$879/401857260.get(Unknown Source)
	at org.springframework.data.repository.util.QueryExecutionConverters$$Lambda$878/278185257.apply(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$$Lambda$877/2110441440.proceedWithInvocation(Unknown Source)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy99.getAllData(Unknown Source)
	at com.market.online.user.service.CategoryService.getAllData(CategoryService.java:21)
	at com.market.online.config.handler.PageInterceptor.preHandle(PageInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 115 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 117 common frames omitted
2023-02-21 09:59:31,862 [http-nio-8888-exec-6] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper 137 - SQL Error: -1, SQLState: 08
2023-02-21 09:59:31,864 [http-nio-8888-exec-6] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper 142 - Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
2023-02-21 09:59:31,867 [http-nio-8888-exec-6] ERROR com.market.online.common.exception.DefaultExceptionAdvice 24 - Exception###: 
org.springframework.dao.DataAccessResourceFailureException: Unable to acquire JDBC Connection; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:254)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy99.getAllData(Unknown Source)
	at com.market.online.user.service.CategoryService.getAllData(CategoryService.java:21)
	at com.market.online.config.handler.PageInterceptor.preHandle(PageInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:109)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:505)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1537)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	at org.hibernate.query.Query.getResultList(Query.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at com.sun.proxy.$Proxy133.getResultList(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor$$Lambda$879/401857260.get(Unknown Source)
	at org.springframework.data.repository.util.QueryExecutionConverters$$Lambda$878/278185257.apply(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$$Lambda$877/2110441440.proceedWithInvocation(Unknown Source)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 58 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	... 102 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 115 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 117 common frames omitted
2023-02-21 09:59:31,869 [http-nio-8888-exec-6] WARN  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver 199 - Resolved [org.springframework.dao.DataAccessResourceFailureException: Unable to acquire JDBC Connection; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection]
2023-02-21 09:59:31,874 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 09:59:31,875 [http-nio-8888-exec-6] INFO  com.zaxxer.hikari.HikariDataSource 110 - HikariPool-1 - Starting...
2023-02-21 09:59:34,921 [http-nio-8888-exec-6] ERROR com.zaxxer.hikari.pool.HikariPool 574 - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:505)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1537)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	at org.hibernate.query.Query.getResultList(Query.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at com.sun.proxy.$Proxy133.getResultList(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor$$Lambda$879/401857260.get(Unknown Source)
	at org.springframework.data.repository.util.QueryExecutionConverters$$Lambda$878/278185257.apply(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$$Lambda$877/2110441440.proceedWithInvocation(Unknown Source)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy99.getAllData(Unknown Source)
	at com.market.online.user.service.CategoryService.getAllData(CategoryService.java:21)
	at com.market.online.config.handler.PageInterceptor.preHandle(PageInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 99 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 101 common frames omitted
2023-02-21 09:59:34,923 [http-nio-8888-exec-6] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper 137 - SQL Error: -1, SQLState: 08
2023-02-21 09:59:34,923 [http-nio-8888-exec-6] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper 142 - Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
2023-02-21 09:59:34,925 [http-nio-8888-exec-6] ERROR com.market.online.common.exception.DefaultExceptionAdvice 24 - Exception###: 
org.springframework.dao.DataAccessResourceFailureException: Unable to acquire JDBC Connection; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:254)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy99.getAllData(Unknown Source)
	at com.market.online.user.service.CategoryService.getAllData(CategoryService.java:21)
	at com.market.online.config.handler.PageInterceptor.preHandle(PageInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:109)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:505)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1537)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	at org.hibernate.query.Query.getResultList(Query.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at com.sun.proxy.$Proxy133.getResultList(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor$$Lambda$879/401857260.get(Unknown Source)
	at org.springframework.data.repository.util.QueryExecutionConverters$$Lambda$878/278185257.apply(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$$Lambda$877/2110441440.proceedWithInvocation(Unknown Source)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 42 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	... 86 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 99 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 101 common frames omitted
2023-02-21 09:59:34,928 [http-nio-8888-exec-6] WARN  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver 199 - Resolved [org.springframework.dao.DataAccessResourceFailureException: Unable to acquire JDBC Connection; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection]
2023-02-21 09:59:44,019 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 09:59:44,020 [http-nio-8888-exec-7] INFO  com.zaxxer.hikari.HikariDataSource 110 - HikariPool-1 - Starting...
2023-02-21 09:59:47,073 [http-nio-8888-exec-7] ERROR com.zaxxer.hikari.pool.HikariPool 574 - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:505)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1537)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	at org.hibernate.query.Query.getResultList(Query.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at com.sun.proxy.$Proxy133.getResultList(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor$$Lambda$879/401857260.get(Unknown Source)
	at org.springframework.data.repository.util.QueryExecutionConverters$$Lambda$878/278185257.apply(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$$Lambda$877/2110441440.proceedWithInvocation(Unknown Source)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy99.getAllData(Unknown Source)
	at com.market.online.user.service.CategoryService.getAllData(CategoryService.java:21)
	at com.market.online.config.handler.PageInterceptor.preHandle(PageInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 115 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 117 common frames omitted
2023-02-21 09:59:47,075 [http-nio-8888-exec-7] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper 137 - SQL Error: -1, SQLState: 08
2023-02-21 09:59:47,075 [http-nio-8888-exec-7] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper 142 - Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
2023-02-21 09:59:47,076 [http-nio-8888-exec-7] ERROR com.market.online.common.exception.DefaultExceptionAdvice 24 - Exception###: 
org.springframework.dao.DataAccessResourceFailureException: Unable to acquire JDBC Connection; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:254)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy99.getAllData(Unknown Source)
	at com.market.online.user.service.CategoryService.getAllData(CategoryService.java:21)
	at com.market.online.config.handler.PageInterceptor.preHandle(PageInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:109)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:505)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1537)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	at org.hibernate.query.Query.getResultList(Query.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at com.sun.proxy.$Proxy133.getResultList(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor$$Lambda$879/401857260.get(Unknown Source)
	at org.springframework.data.repository.util.QueryExecutionConverters$$Lambda$878/278185257.apply(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$$Lambda$877/2110441440.proceedWithInvocation(Unknown Source)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 58 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	... 102 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 115 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 117 common frames omitted
2023-02-21 09:59:47,077 [http-nio-8888-exec-7] WARN  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver 199 - Resolved [org.springframework.dao.DataAccessResourceFailureException: Unable to acquire JDBC Connection; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection]
2023-02-21 09:59:47,079 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 09:59:47,080 [http-nio-8888-exec-7] INFO  com.zaxxer.hikari.HikariDataSource 110 - HikariPool-1 - Starting...
2023-02-21 09:59:48,016 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 09:59:50,119 [http-nio-8888-exec-7] ERROR com.zaxxer.hikari.pool.HikariPool 574 - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:505)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1537)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	at org.hibernate.query.Query.getResultList(Query.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at com.sun.proxy.$Proxy133.getResultList(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor$$Lambda$879/401857260.get(Unknown Source)
	at org.springframework.data.repository.util.QueryExecutionConverters$$Lambda$878/278185257.apply(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$$Lambda$877/2110441440.proceedWithInvocation(Unknown Source)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy99.getAllData(Unknown Source)
	at com.market.online.user.service.CategoryService.getAllData(CategoryService.java:21)
	at com.market.online.config.handler.PageInterceptor.preHandle(PageInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 99 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 101 common frames omitted
2023-02-21 09:59:50,120 [http-nio-8888-exec-1] INFO  com.zaxxer.hikari.HikariDataSource 110 - HikariPool-1 - Starting...
2023-02-21 09:59:50,120 [http-nio-8888-exec-7] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper 137 - SQL Error: -1, SQLState: 08
2023-02-21 09:59:50,121 [http-nio-8888-exec-7] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper 142 - Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
2023-02-21 09:59:50,123 [http-nio-8888-exec-7] ERROR com.market.online.common.exception.DefaultExceptionAdvice 24 - Exception###: 
org.springframework.dao.DataAccessResourceFailureException: Unable to acquire JDBC Connection; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:254)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy99.getAllData(Unknown Source)
	at com.market.online.user.service.CategoryService.getAllData(CategoryService.java:21)
	at com.market.online.config.handler.PageInterceptor.preHandle(PageInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:109)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:505)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1537)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	at org.hibernate.query.Query.getResultList(Query.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at com.sun.proxy.$Proxy133.getResultList(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor$$Lambda$879/401857260.get(Unknown Source)
	at org.springframework.data.repository.util.QueryExecutionConverters$$Lambda$878/278185257.apply(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$$Lambda$877/2110441440.proceedWithInvocation(Unknown Source)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 42 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	... 86 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 99 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 101 common frames omitted
2023-02-21 09:59:50,126 [http-nio-8888-exec-7] WARN  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver 199 - Resolved [org.springframework.dao.DataAccessResourceFailureException: Unable to acquire JDBC Connection; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection]
2023-02-21 09:59:53,179 [http-nio-8888-exec-1] ERROR com.zaxxer.hikari.pool.HikariPool 574 - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:505)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1537)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	at org.hibernate.query.Query.getResultList(Query.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at com.sun.proxy.$Proxy133.getResultList(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor$$Lambda$879/401857260.get(Unknown Source)
	at org.springframework.data.repository.util.QueryExecutionConverters$$Lambda$878/278185257.apply(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$$Lambda$877/2110441440.proceedWithInvocation(Unknown Source)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy99.getAllData(Unknown Source)
	at com.market.online.user.service.CategoryService.getAllData(CategoryService.java:21)
	at com.market.online.config.handler.PageInterceptor.preHandle(PageInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 115 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 117 common frames omitted
2023-02-21 09:59:53,181 [http-nio-8888-exec-1] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper 137 - SQL Error: -1, SQLState: 08
2023-02-21 09:59:53,182 [http-nio-8888-exec-1] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper 142 - Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
2023-02-21 09:59:53,185 [http-nio-8888-exec-1] ERROR com.market.online.common.exception.DefaultExceptionAdvice 24 - Exception###: 
org.springframework.dao.DataAccessResourceFailureException: Unable to acquire JDBC Connection; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:254)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy99.getAllData(Unknown Source)
	at com.market.online.user.service.CategoryService.getAllData(CategoryService.java:21)
	at com.market.online.config.handler.PageInterceptor.preHandle(PageInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:109)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:505)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1537)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	at org.hibernate.query.Query.getResultList(Query.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at com.sun.proxy.$Proxy133.getResultList(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor$$Lambda$879/401857260.get(Unknown Source)
	at org.springframework.data.repository.util.QueryExecutionConverters$$Lambda$878/278185257.apply(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$$Lambda$877/2110441440.proceedWithInvocation(Unknown Source)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 58 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	... 102 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 115 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 117 common frames omitted
2023-02-21 09:59:53,187 [http-nio-8888-exec-1] WARN  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver 199 - Resolved [org.springframework.dao.DataAccessResourceFailureException: Unable to acquire JDBC Connection; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection]
2023-02-21 09:59:53,196 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 09:59:53,196 [http-nio-8888-exec-1] INFO  com.zaxxer.hikari.HikariDataSource 110 - HikariPool-1 - Starting...
2023-02-21 09:59:56,229 [http-nio-8888-exec-1] ERROR com.zaxxer.hikari.pool.HikariPool 574 - HikariPool-1 - Exception during pool initialization.
java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:505)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1537)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	at org.hibernate.query.Query.getResultList(Query.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at com.sun.proxy.$Proxy133.getResultList(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor$$Lambda$879/401857260.get(Unknown Source)
	at org.springframework.data.repository.util.QueryExecutionConverters$$Lambda$878/278185257.apply(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$$Lambda$877/2110441440.proceedWithInvocation(Unknown Source)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy99.getAllData(Unknown Source)
	at com.market.online.user.service.CategoryService.getAllData(CategoryService.java:21)
	at com.market.online.config.handler.PageInterceptor.preHandle(PageInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 99 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 101 common frames omitted
2023-02-21 09:59:56,232 [http-nio-8888-exec-1] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper 137 - SQL Error: -1, SQLState: 08
2023-02-21 09:59:56,234 [http-nio-8888-exec-1] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper 142 - Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
2023-02-21 09:59:56,236 [http-nio-8888-exec-1] ERROR com.market.online.common.exception.DefaultExceptionAdvice 24 - Exception###: 
org.springframework.dao.DataAccessResourceFailureException: Unable to acquire JDBC Connection; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:254)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:528)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:153)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy99.getAllData(Unknown Source)
	at com.market.online.user.service.CategoryService.getAllData(CategoryService.java:21)
	at com.market.online.config.handler.PageInterceptor.preHandle(PageInterceptor.java:28)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:137)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1579)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:109)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:505)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:395)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1537)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	at org.hibernate.query.Query.getResultList(Query.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at com.sun.proxy.$Proxy133.getResultList(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$CollectionExecution.doExecute(JpaQueryExecution.java:129)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor$$Lambda$879/401857260.get(Unknown Source)
	at org.springframework.data.repository.util.QueryExecutionConverters$$Lambda$878/278185257.apply(Unknown Source)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$$Lambda$877/2110441440.proceedWithInvocation(Unknown Source)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	... 42 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Could not connect to address=(host=localhost)(port=3307)(type=master) : Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1241)
	at org.mariadb.jdbc.internal.util.Utils.retrieveProxy(Utils.java:610)
	at org.mariadb.jdbc.MariaDbConnection.newConnection(MariaDbConnection.java:142)
	at org.mariadb.jdbc.Driver.connect(Driver.java:86)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:136)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:369)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:198)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:467)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:541)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	... 86 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Socket fail to connect to host:localhost, port:3307. Connection refused: connect
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.get(ExceptionMapper.java:241)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionMapper.connException(ExceptionMapper.java:87)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:218)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createConnection(AbstractConnectProtocol.java:474)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.connectWithoutProxy(AbstractConnectProtocol.java:1236)
	... 99 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:345)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.mariadb.jdbc.internal.protocol.AbstractConnectProtocol.createSocket(AbstractConnectProtocol.java:213)
	... 101 common frames omitted
2023-02-21 09:59:56,239 [http-nio-8888-exec-1] WARN  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver 199 - Resolved [org.springframework.dao.DataAccessResourceFailureException: Unable to acquire JDBC Connection; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection]
2023-02-21 11:00:31,315 [restartedMain] INFO  com.market.online.Application 50 - Starting Application on MANH with PID 28324 (F:\dev\source\webtraodoisp\target\classes started by manhn in F:\dev\source\webtraodoisp)
2023-02-21 11:00:31,319 [restartedMain] INFO  com.market.online.Application 652 - The following profiles are active: local
2023-02-21 11:00:31,386 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor 225 - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-02-21 11:00:31,387 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor 225 - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-02-21 11:00:32,691 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate 126 - Bootstrapping Spring Data repositories in DEFAULT mode.
2023-02-21 11:00:32,936 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate 182 - Finished Spring Data repository scanning in 236ms. Found 19 repository interfaces.
2023-02-21 11:00:33,498 [restartedMain] INFO  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker 330 - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$949d32bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-02-21 11:00:34,374 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 90 - Tomcat initialized with port(s): 8888 (http)
2023-02-21 11:00:34,394 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol 173 - Initializing ProtocolHandler ["http-nio-8888"]
2023-02-21 11:00:34,408 [restartedMain] INFO  org.apache.catalina.core.StandardService 173 - Starting service [Tomcat]
2023-02-21 11:00:34,408 [restartedMain] INFO  org.apache.catalina.core.StandardEngine 173 - Starting Servlet engine: [Apache Tomcat/9.0.27]
2023-02-21 11:00:34,826 [restartedMain] INFO  org.apache.jasper.servlet.TldScanner 173 - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-02-21 11:00:34,843 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] 173 - Initializing Spring embedded WebApplicationContext
2023-02-21 11:00:34,844 [restartedMain] INFO  org.springframework.web.context.ContextLoader 284 - Root WebApplicationContext: initialization completed in 3457 ms
2023-02-21 11:00:35,075 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource 110 - HikariPool-1 - Starting...
2023-02-21 11:00:35,164 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource 123 - HikariPool-1 - Start completed.
2023-02-21 11:00:35,262 [restartedMain] INFO  org.hibernate.jpa.internal.util.LogHelper 31 - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-02-21 11:00:35,375 [restartedMain] INFO  org.hibernate.Version 46 - HHH000412: Hibernate Core {5.3.13.Final}
2023-02-21 11:00:35,377 [restartedMain] INFO  org.hibernate.cfg.Environment 213 - HHH000206: hibernate.properties not found
2023-02-21 11:00:35,564 [restartedMain] INFO  org.hibernate.annotations.common.Version 49 - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-02-21 11:00:35,839 [restartedMain] INFO  org.hibernate.dialect.Dialect 157 - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-02-21 11:00:36,843 [restartedMain] INFO  org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean 416 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-02-21 11:00:37,214 [restartedMain] INFO  org.hibernate.hql.internal.QueryTranslatorFactoryInitiator 47 - HHH000397: Using ASTQueryTranslatorFactory
2023-02-21 11:00:38,218 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor 171 - Initializing ExecutorService 'clientInboundChannelExecutor'
2023-02-21 11:00:38,224 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor 171 - Initializing ExecutorService 'clientOutboundChannelExecutor'
2023-02-21 11:00:38,436 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler 171 - Initializing ExecutorService 'messageBrokerTaskScheduler'
2023-02-21 11:00:38,509 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor 171 - Initializing ExecutorService 'brokerChannelExecutor'
2023-02-21 11:00:39,392 [restartedMain] INFO  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer 57 - LiveReload server is running on port 35729
2023-02-21 11:00:39,488 [restartedMain] INFO  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler 137 - Starting...
2023-02-21 11:00:39,489 [restartedMain] INFO  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler 137 - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-02-21 11:00:39,491 [restartedMain] INFO  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler 137 - Started.
2023-02-21 11:00:39,509 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol 173 - Starting ProtocolHandler ["http-nio-8888"]
2023-02-21 11:00:39,560 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer 202 - Tomcat started on port(s): 8888 (http) with context path ''
2023-02-21 11:00:39,565 [restartedMain] INFO  com.market.online.Application 59 - Started Application in 8.721 seconds (JVM running for 9.462)
2023-02-21 11:01:13,921 [http-nio-8888-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] 173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-02-21 11:01:13,921 [http-nio-8888-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet 525 - Initializing Servlet 'dispatcherServlet'
2023-02-21 11:01:13,932 [http-nio-8888-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet 547 - Completed initialization in 11 ms
2023-02-21 11:01:14,000 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 11:01:14,039 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 11:01:14,060 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 11:01:15,178 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 11:01:15,182 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 11:01:15,185 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 11:01:15,192 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 11:01:15,193 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 11:01:15,194 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 11:01:15,239 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 11:01:15,304 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 11:01:15,307 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 11:01:15,312 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 11:01:15,314 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 11:01:15,326 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 11:01:15,337 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 11:01:15,343 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 11:01:15,345 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 11:01:15,373 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 11:01:15,865 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 11:01:15,872 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 11:01:15,882 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 11:01:15,886 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 11:01:38,520 [MessageBroker-1] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 1, completed tasks = 0]
2023-02-21 11:05:39,517 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 11:05:39,555 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_0_, order0_.created_date as created_2_9_0_, order0_.id_buyer as id_buyer3_9_0_, order0_.id_product as id_produ4_9_0_, order0_.id_redirect as id_redir5_9_0_, order0_.id_seller as id_selle6_9_0_, order0_.id_status as id_statu7_9_0_, order0_.id_type as id_type8_9_0_, order0_.price as price9_9_0_, order0_.rate as rate10_9_0_, order0_.updated_date as updated11_9_0_ from orders order0_ where order0_.id=?
2023-02-21 11:05:39,586 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.id_redirect=?
2023-02-21 11:05:39,590 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select product0_.id as id1_14_0_, product0_.created_date as created_2_14_0_, product0_.id_category as id_categ3_14_0_, product0_.id_confirmer as id_confi4_14_0_, product0_.id_status as id_statu5_14_0_, product0_.id_user as id_user6_14_0_, product0_.name as name7_14_0_, product0_.price as price8_14_0_, product0_.price_verify as price_ve9_14_0_ from product product0_ where product0_.id=?
2023-02-21 11:05:39,599 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select product0_.id as id1_14_0_, product0_.created_date as created_2_14_0_, product0_.id_category as id_categ3_14_0_, product0_.id_confirmer as id_confi4_14_0_, product0_.id_status as id_statu5_14_0_, product0_.id_user as id_user6_14_0_, product0_.name as name7_14_0_, product0_.price as price8_14_0_, product0_.price_verify as price_ve9_14_0_ from product product0_ where product0_.id=?
2023-02-21 11:05:39,614 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - update product set id_category=?, id_confirmer=?, id_status=?, id_user=?, name=?, price=?, price_verify=? where id=?
2023-02-21 11:05:39,625 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_0_, order0_.created_date as created_2_9_0_, order0_.id_buyer as id_buyer3_9_0_, order0_.id_product as id_produ4_9_0_, order0_.id_redirect as id_redir5_9_0_, order0_.id_seller as id_selle6_9_0_, order0_.id_status as id_statu7_9_0_, order0_.id_type as id_type8_9_0_, order0_.price as price9_9_0_, order0_.rate as rate10_9_0_, order0_.updated_date as updated11_9_0_ from orders order0_ where order0_.id=?
2023-02-21 11:05:39,627 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - update orders set created_date=?, id_buyer=?, id_product=?, id_redirect=?, id_seller=?, id_status=?, id_type=?, price=?, rate=?, updated_date=? where id=?
2023-02-21 11:05:39,631 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select product0_.id as id1_14_0_, product0_.created_date as created_2_14_0_, product0_.id_category as id_categ3_14_0_, product0_.id_confirmer as id_confi4_14_0_, product0_.id_status as id_statu5_14_0_, product0_.id_user as id_user6_14_0_, product0_.name as name7_14_0_, product0_.price as price8_14_0_, product0_.price_verify as price_ve9_14_0_ from product product0_ where product0_.id=?
2023-02-21 11:05:39,634 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select product0_.id as id1_14_0_, product0_.created_date as created_2_14_0_, product0_.id_category as id_categ3_14_0_, product0_.id_confirmer as id_confi4_14_0_, product0_.id_status as id_statu5_14_0_, product0_.id_user as id_user6_14_0_, product0_.name as name7_14_0_, product0_.price as price8_14_0_, product0_.price_verify as price_ve9_14_0_ from product product0_ where product0_.id=?
2023-02-21 11:05:39,637 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_0_, order0_.created_date as created_2_9_0_, order0_.id_buyer as id_buyer3_9_0_, order0_.id_product as id_produ4_9_0_, order0_.id_redirect as id_redir5_9_0_, order0_.id_seller as id_selle6_9_0_, order0_.id_status as id_statu7_9_0_, order0_.id_type as id_type8_9_0_, order0_.price as price9_9_0_, order0_.rate as rate10_9_0_, order0_.updated_date as updated11_9_0_ from orders order0_ where order0_.id=?
2023-02-21 11:05:39,638 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - update orders set created_date=?, id_buyer=?, id_product=?, id_redirect=?, id_seller=?, id_status=?, id_type=?, price=?, rate=?, updated_date=? where id=?
2023-02-21 11:05:39,645 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - insert into order_history (created_date, description, id_order, id_status, id_user) values (?, ?, ?, ?, ?)
2023-02-21 11:05:39,654 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_0_, order0_.created_date as created_2_9_0_, order0_.id_buyer as id_buyer3_9_0_, order0_.id_product as id_produ4_9_0_, order0_.id_redirect as id_redir5_9_0_, order0_.id_seller as id_selle6_9_0_, order0_.id_status as id_statu7_9_0_, order0_.id_type as id_type8_9_0_, order0_.price as price9_9_0_, order0_.rate as rate10_9_0_, order0_.updated_date as updated11_9_0_ from orders order0_ where order0_.id=?
2023-02-21 11:05:39,656 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.id_redirect=?
2023-02-21 11:05:39,658 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select product0_.id as id1_14_0_, product0_.created_date as created_2_14_0_, product0_.id_category as id_categ3_14_0_, product0_.id_confirmer as id_confi4_14_0_, product0_.id_status as id_statu5_14_0_, product0_.id_user as id_user6_14_0_, product0_.name as name7_14_0_, product0_.price as price8_14_0_, product0_.price_verify as price_ve9_14_0_ from product product0_ where product0_.id=?
2023-02-21 11:05:39,659 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select product0_.id as id1_14_0_, product0_.created_date as created_2_14_0_, product0_.id_category as id_categ3_14_0_, product0_.id_confirmer as id_confi4_14_0_, product0_.id_status as id_statu5_14_0_, product0_.id_user as id_user6_14_0_, product0_.name as name7_14_0_, product0_.price as price8_14_0_, product0_.price_verify as price_ve9_14_0_ from product product0_ where product0_.id=?
2023-02-21 11:05:39,661 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_0_, order0_.created_date as created_2_9_0_, order0_.id_buyer as id_buyer3_9_0_, order0_.id_product as id_produ4_9_0_, order0_.id_redirect as id_redir5_9_0_, order0_.id_seller as id_selle6_9_0_, order0_.id_status as id_statu7_9_0_, order0_.id_type as id_type8_9_0_, order0_.price as price9_9_0_, order0_.rate as rate10_9_0_, order0_.updated_date as updated11_9_0_ from orders order0_ where order0_.id=?
2023-02-21 11:05:39,662 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - update orders set created_date=?, id_buyer=?, id_product=?, id_redirect=?, id_seller=?, id_status=?, id_type=?, price=?, rate=?, updated_date=? where id=?
2023-02-21 11:05:39,667 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select product0_.id as id1_14_0_, product0_.created_date as created_2_14_0_, product0_.id_category as id_categ3_14_0_, product0_.id_confirmer as id_confi4_14_0_, product0_.id_status as id_statu5_14_0_, product0_.id_user as id_user6_14_0_, product0_.name as name7_14_0_, product0_.price as price8_14_0_, product0_.price_verify as price_ve9_14_0_ from product product0_ where product0_.id=?
2023-02-21 11:05:39,669 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select product0_.id as id1_14_0_, product0_.created_date as created_2_14_0_, product0_.id_category as id_categ3_14_0_, product0_.id_confirmer as id_confi4_14_0_, product0_.id_status as id_statu5_14_0_, product0_.id_user as id_user6_14_0_, product0_.name as name7_14_0_, product0_.price as price8_14_0_, product0_.price_verify as price_ve9_14_0_ from product product0_ where product0_.id=?
2023-02-21 11:05:39,671 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_0_, order0_.created_date as created_2_9_0_, order0_.id_buyer as id_buyer3_9_0_, order0_.id_product as id_produ4_9_0_, order0_.id_redirect as id_redir5_9_0_, order0_.id_seller as id_selle6_9_0_, order0_.id_status as id_statu7_9_0_, order0_.id_type as id_type8_9_0_, order0_.price as price9_9_0_, order0_.rate as rate10_9_0_, order0_.updated_date as updated11_9_0_ from orders order0_ where order0_.id=?
2023-02-21 11:05:39,673 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - update orders set created_date=?, id_buyer=?, id_product=?, id_redirect=?, id_seller=?, id_status=?, id_type=?, price=?, rate=?, updated_date=? where id=?
2023-02-21 11:05:39,675 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - insert into order_history (created_date, description, id_order, id_status, id_user) values (?, ?, ?, ?, ?)
2023-02-21 11:05:39,680 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_0_, order0_.created_date as created_2_9_0_, order0_.id_buyer as id_buyer3_9_0_, order0_.id_product as id_produ4_9_0_, order0_.id_redirect as id_redir5_9_0_, order0_.id_seller as id_selle6_9_0_, order0_.id_status as id_statu7_9_0_, order0_.id_type as id_type8_9_0_, order0_.price as price9_9_0_, order0_.rate as rate10_9_0_, order0_.updated_date as updated11_9_0_ from orders order0_ where order0_.id=?
2023-02-21 11:05:39,682 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.id_redirect=?
2023-02-21 11:05:39,684 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select product0_.id as id1_14_0_, product0_.created_date as created_2_14_0_, product0_.id_category as id_categ3_14_0_, product0_.id_confirmer as id_confi4_14_0_, product0_.id_status as id_statu5_14_0_, product0_.id_user as id_user6_14_0_, product0_.name as name7_14_0_, product0_.price as price8_14_0_, product0_.price_verify as price_ve9_14_0_ from product product0_ where product0_.id=?
2023-02-21 11:05:39,687 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select product0_.id as id1_14_0_, product0_.created_date as created_2_14_0_, product0_.id_category as id_categ3_14_0_, product0_.id_confirmer as id_confi4_14_0_, product0_.id_status as id_statu5_14_0_, product0_.id_user as id_user6_14_0_, product0_.name as name7_14_0_, product0_.price as price8_14_0_, product0_.price_verify as price_ve9_14_0_ from product product0_ where product0_.id=?
2023-02-21 11:05:39,688 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - update product set id_category=?, id_confirmer=?, id_status=?, id_user=?, name=?, price=?, price_verify=? where id=?
2023-02-21 11:05:39,692 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_0_, order0_.created_date as created_2_9_0_, order0_.id_buyer as id_buyer3_9_0_, order0_.id_product as id_produ4_9_0_, order0_.id_redirect as id_redir5_9_0_, order0_.id_seller as id_selle6_9_0_, order0_.id_status as id_statu7_9_0_, order0_.id_type as id_type8_9_0_, order0_.price as price9_9_0_, order0_.rate as rate10_9_0_, order0_.updated_date as updated11_9_0_ from orders order0_ where order0_.id=?
2023-02-21 11:05:39,694 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - update orders set created_date=?, id_buyer=?, id_product=?, id_redirect=?, id_seller=?, id_status=?, id_type=?, price=?, rate=?, updated_date=? where id=?
2023-02-21 11:05:39,699 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select product0_.id as id1_14_0_, product0_.created_date as created_2_14_0_, product0_.id_category as id_categ3_14_0_, product0_.id_confirmer as id_confi4_14_0_, product0_.id_status as id_statu5_14_0_, product0_.id_user as id_user6_14_0_, product0_.name as name7_14_0_, product0_.price as price8_14_0_, product0_.price_verify as price_ve9_14_0_ from product product0_ where product0_.id=?
2023-02-21 11:05:39,701 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select product0_.id as id1_14_0_, product0_.created_date as created_2_14_0_, product0_.id_category as id_categ3_14_0_, product0_.id_confirmer as id_confi4_14_0_, product0_.id_status as id_statu5_14_0_, product0_.id_user as id_user6_14_0_, product0_.name as name7_14_0_, product0_.price as price8_14_0_, product0_.price_verify as price_ve9_14_0_ from product product0_ where product0_.id=?
2023-02-21 11:05:39,704 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_0_, order0_.created_date as created_2_9_0_, order0_.id_buyer as id_buyer3_9_0_, order0_.id_product as id_produ4_9_0_, order0_.id_redirect as id_redir5_9_0_, order0_.id_seller as id_selle6_9_0_, order0_.id_status as id_statu7_9_0_, order0_.id_type as id_type8_9_0_, order0_.price as price9_9_0_, order0_.rate as rate10_9_0_, order0_.updated_date as updated11_9_0_ from orders order0_ where order0_.id=?
2023-02-21 11:05:39,705 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - update orders set created_date=?, id_buyer=?, id_product=?, id_redirect=?, id_seller=?, id_status=?, id_type=?, price=?, rate=?, updated_date=? where id=?
2023-02-21 11:05:39,707 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - insert into order_history (created_date, description, id_order, id_status, id_user) values (?, ?, ?, ?, ?)
2023-02-21 11:05:39,713 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_0_, order0_.created_date as created_2_9_0_, order0_.id_buyer as id_buyer3_9_0_, order0_.id_product as id_produ4_9_0_, order0_.id_redirect as id_redir5_9_0_, order0_.id_seller as id_selle6_9_0_, order0_.id_status as id_statu7_9_0_, order0_.id_type as id_type8_9_0_, order0_.price as price9_9_0_, order0_.rate as rate10_9_0_, order0_.updated_date as updated11_9_0_ from orders order0_ where order0_.id=?
2023-02-21 11:05:39,713 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.id_redirect=?
2023-02-21 11:05:39,715 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select product0_.id as id1_14_0_, product0_.created_date as created_2_14_0_, product0_.id_category as id_categ3_14_0_, product0_.id_confirmer as id_confi4_14_0_, product0_.id_status as id_statu5_14_0_, product0_.id_user as id_user6_14_0_, product0_.name as name7_14_0_, product0_.price as price8_14_0_, product0_.price_verify as price_ve9_14_0_ from product product0_ where product0_.id=?
2023-02-21 11:05:39,717 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select product0_.id as id1_14_0_, product0_.created_date as created_2_14_0_, product0_.id_category as id_categ3_14_0_, product0_.id_confirmer as id_confi4_14_0_, product0_.id_status as id_statu5_14_0_, product0_.id_user as id_user6_14_0_, product0_.name as name7_14_0_, product0_.price as price8_14_0_, product0_.price_verify as price_ve9_14_0_ from product product0_ where product0_.id=?
2023-02-21 11:05:39,727 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_0_, order0_.created_date as created_2_9_0_, order0_.id_buyer as id_buyer3_9_0_, order0_.id_product as id_produ4_9_0_, order0_.id_redirect as id_redir5_9_0_, order0_.id_seller as id_selle6_9_0_, order0_.id_status as id_statu7_9_0_, order0_.id_type as id_type8_9_0_, order0_.price as price9_9_0_, order0_.rate as rate10_9_0_, order0_.updated_date as updated11_9_0_ from orders order0_ where order0_.id=?
2023-02-21 11:05:39,728 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - update orders set created_date=?, id_buyer=?, id_product=?, id_redirect=?, id_seller=?, id_status=?, id_type=?, price=?, rate=?, updated_date=? where id=?
2023-02-21 11:05:39,732 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select product0_.id as id1_14_0_, product0_.created_date as created_2_14_0_, product0_.id_category as id_categ3_14_0_, product0_.id_confirmer as id_confi4_14_0_, product0_.id_status as id_statu5_14_0_, product0_.id_user as id_user6_14_0_, product0_.name as name7_14_0_, product0_.price as price8_14_0_, product0_.price_verify as price_ve9_14_0_ from product product0_ where product0_.id=?
2023-02-21 11:05:39,734 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select product0_.id as id1_14_0_, product0_.created_date as created_2_14_0_, product0_.id_category as id_categ3_14_0_, product0_.id_confirmer as id_confi4_14_0_, product0_.id_status as id_statu5_14_0_, product0_.id_user as id_user6_14_0_, product0_.name as name7_14_0_, product0_.price as price8_14_0_, product0_.price_verify as price_ve9_14_0_ from product product0_ where product0_.id=?
2023-02-21 11:05:39,738 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_0_, order0_.created_date as created_2_9_0_, order0_.id_buyer as id_buyer3_9_0_, order0_.id_product as id_produ4_9_0_, order0_.id_redirect as id_redir5_9_0_, order0_.id_seller as id_selle6_9_0_, order0_.id_status as id_statu7_9_0_, order0_.id_type as id_type8_9_0_, order0_.price as price9_9_0_, order0_.rate as rate10_9_0_, order0_.updated_date as updated11_9_0_ from orders order0_ where order0_.id=?
2023-02-21 11:05:39,739 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - update orders set created_date=?, id_buyer=?, id_product=?, id_redirect=?, id_seller=?, id_status=?, id_type=?, price=?, rate=?, updated_date=? where id=?
2023-02-21 11:05:39,741 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - insert into order_history (created_date, description, id_order, id_status, id_user) values (?, ?, ?, ?, ?)
2023-02-21 11:10:39,752 [MessageBroker-3] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 11:15:39,764 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 11:20:39,782 [MessageBroker-1] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 11:25:39,797 [MessageBroker-5] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 11:30:39,801 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 11:31:38,516 [MessageBroker-6] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 7]
2023-02-21 11:35:39,806 [MessageBroker-3] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 11:40:39,814 [MessageBroker-3] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 11:45:39,835 [MessageBroker-3] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 11:50:39,846 [MessageBroker-3] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 11:55:39,857 [MessageBroker-3] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 12:00:39,871 [MessageBroker-3] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 12:01:38,517 [MessageBroker-8] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 14]
2023-02-21 12:05:39,891 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 12:10:39,904 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 12:15:39,916 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 12:20:39,921 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 12:25:39,935 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 12:30:39,950 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 12:31:38,519 [MessageBroker-3] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 21]
2023-02-21 12:35:39,974 [MessageBroker-6] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 12:40:39,979 [MessageBroker-6] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 12:45:39,993 [MessageBroker-6] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 12:50:40,001 [MessageBroker-6] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 12:55:40,013 [MessageBroker-6] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 13:00:40,029 [MessageBroker-6] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 13:01:38,522 [MessageBroker-2] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 28]
2023-02-21 13:05:40,041 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 13:10:40,051 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 13:15:40,063 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 13:20:40,074 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 13:25:40,086 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 13:30:40,106 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 13:31:38,521 [MessageBroker-2] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 35]
2023-02-21 13:35:40,120 [MessageBroker-6] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 13:40:40,140 [MessageBroker-6] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 13:45:40,154 [MessageBroker-6] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 13:50:40,182 [MessageBroker-6] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 13:55:40,193 [MessageBroker-6] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 14:00:40,205 [MessageBroker-6] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 14:01:38,513 [MessageBroker-7] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 42]
2023-02-21 14:05:40,230 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 14:10:40,249 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 14:15:40,261 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 14:20:40,279 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 14:25:40,303 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 14:30:40,322 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 14:31:38,518 [MessageBroker-6] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 49]
2023-02-21 14:35:40,333 [MessageBroker-1] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 14:40:40,355 [MessageBroker-1] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 14:45:40,373 [MessageBroker-1] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 14:50:40,410 [MessageBroker-1] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 14:55:40,427 [MessageBroker-1] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 15:00:40,441 [MessageBroker-1] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 15:01:38,521 [MessageBroker-8] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 56]
2023-02-21 15:05:40,456 [MessageBroker-7] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 15:10:40,472 [MessageBroker-7] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 15:15:40,476 [MessageBroker-7] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 15:20:40,485 [MessageBroker-7] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 15:25:40,497 [MessageBroker-7] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 15:30:40,506 [MessageBroker-7] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 15:31:38,520 [MessageBroker-1] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 63]
2023-02-21 15:35:40,529 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 15:37:05,173 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,189 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,191 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:37:05,251 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,253 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,256 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,256 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,262 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,262 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,270 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,281 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,282 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,311 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,311 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,312 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,311 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,313 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,312 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,324 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,324 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,331 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,345 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,351 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,353 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,364 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,367 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,370 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,378 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,381 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,382 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,391 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,459 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,461 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:37:05,473 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,475 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:37:05,487 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:05,490 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:37:10,929 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:11,035 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media3_.url as col_11_0_, postuser4_.had_view as col_12_0_, postuser4_.had_like as col_13_0_, postuser4_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) inner join media media3_ on (postmedia2_.id_media=media3_.id) left outer join post_user postuser4_ on (post1_.id=postuser4_.id_post and postuser4_.id_user=?) where product0_.id_status=6 and (?='' or product0_.name like ?) and (?=0 or product0_.id_user<>?) and (?=0 or product0_.id_category=?) and (?=0 or postuser4_.had_like=?) and (?=0 or postuser4_.had_follow=?) order by product0_.id DESC limit ?
2023-02-21 15:37:11,394 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:11,398 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:11,399 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:11,402 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:11,413 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:11,415 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:37:11,429 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:11,431 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:37:20,559 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:20,571 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media3_.url as col_11_0_, postuser4_.had_view as col_12_0_, postuser4_.had_like as col_13_0_, postuser4_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) inner join media media3_ on (postmedia2_.id_media=media3_.id) left outer join post_user postuser4_ on (post1_.id=postuser4_.id_post and postuser4_.id_user=?) where product0_.id_status=6 and (?='' or product0_.name like ?) and (?=0 or product0_.id_user<>?) and (?=0 or product0_.id_category=?) and (?=0 or postuser4_.had_like=?) and (?=0 or postuser4_.had_follow=?) order by product0_.id DESC limit ?
2023-02-21 15:37:20,611 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:20,611 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:20,614 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:20,614 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:20,638 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:20,641 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:37:20,652 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:20,655 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:37:23,602 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:23,607 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media3_.url as col_11_0_, postuser4_.had_view as col_12_0_, postuser4_.had_like as col_13_0_, postuser4_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) inner join media media3_ on (postmedia2_.id_media=media3_.id) left outer join post_user postuser4_ on (post1_.id=postuser4_.id_post and postuser4_.id_user=?) where product0_.id_status=6 and (?='' or product0_.name like ?) and (?=0 or product0_.id_user<>?) and (?=0 or product0_.id_category=?) and (?=0 or postuser4_.had_like=?) and (?=0 or postuser4_.had_follow=?) order by product0_.id DESC limit ?
2023-02-21 15:37:26,741 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:26,749 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media3_.url as col_11_0_, postuser4_.had_view as col_12_0_, postuser4_.had_like as col_13_0_, postuser4_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) inner join media media3_ on (postmedia2_.id_media=media3_.id) left outer join post_user postuser4_ on (post1_.id=postuser4_.id_post and postuser4_.id_user=?) where product0_.id_status=6 and (?='' or product0_.name like ?) and (?=0 or product0_.id_user<>?) and (?=0 or product0_.id_category=?) and (?=0 or postuser4_.had_like=?) and (?=0 or postuser4_.had_follow=?) order by product0_.id DESC limit ?
2023-02-21 15:37:29,557 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:29,564 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media3_.url as col_11_0_, postuser4_.had_view as col_12_0_, postuser4_.had_like as col_13_0_, postuser4_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) inner join media media3_ on (postmedia2_.id_media=media3_.id) left outer join post_user postuser4_ on (post1_.id=postuser4_.id_post and postuser4_.id_user=?) where product0_.id_status=6 and (?='' or product0_.name like ?) and (?=0 or product0_.id_user<>?) and (?=0 or product0_.id_category=?) and (?=0 or postuser4_.had_like=?) and (?=0 or postuser4_.had_follow=?) order by product0_.id DESC limit ?
2023-02-21 15:37:29,604 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:29,604 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:29,607 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:29,607 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:29,625 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:29,627 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:37:29,639 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:29,641 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:37:33,955 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:33,966 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select post0_.id as id1_10_, post0_.content as content2_10_, post0_.created_date as created_3_10_, post0_.id_product as id_produ4_10_, post0_.id_user as id_user5_10_, post0_.title as title6_10_, post0_.total_comment as total_co7_10_, post0_.total_follow as total_fo8_10_, post0_.total_like as total_li9_10_, post0_.total_view as total_v10_10_, post0_.updated_date as updated11_10_ from post post0_ where post0_.id_product=?
2023-02-21 15:37:33,971 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select product0_.id as id1_14_0_, product0_.created_date as created_2_14_0_, product0_.id_category as id_categ3_14_0_, product0_.id_confirmer as id_confi4_14_0_, product0_.id_status as id_statu5_14_0_, product0_.id_user as id_user6_14_0_, product0_.name as name7_14_0_, product0_.price as price8_14_0_, product0_.price_verify as price_ve9_14_0_ from product product0_ where product0_.id=?
2023-02-21 15:37:33,976 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select user0_.id as id1_18_0_, user0_.address as address2_18_0_, user0_.created_date as created_3_18_0_, user0_.email as email4_18_0_, user0_.full_name as full_nam5_18_0_, user0_.gender as gender6_18_0_, user0_.id_role as id_role7_18_0_, user0_.password as password8_18_0_, user0_.phone as phone9_18_0_, user0_.username as usernam10_18_0_ from user user0_ where user0_.id=?
2023-02-21 15:37:33,978 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select avg(order0_.rate) as col_0_0_ from orders order0_ where order0_.id_seller=? and order0_.rate>0
2023-02-21 15:37:33,981 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select media0_.id as id1_6_, media0_.type as type2_6_, media0_.url as url3_6_ from media media0_ inner join post_media postmedia1_ on (media0_.id=postmedia1_.id_media) where postmedia1_.id_post=?
2023-02-21 15:37:33,985 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select postmeta0_.id as id1_12_, postmeta0_.description as descript2_12_, postmeta0_.id_post as id_post3_12_, postmeta0_.meta_key as meta_key4_12_, postmeta0_.meta_name as meta_nam5_12_, postmeta0_.meta_value as meta_val6_12_ from post_meta postmeta0_ where postmeta0_.id_post=?
2023-02-21 15:37:33,988 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select user1_.full_name as col_0_0_, comment0_.content as col_1_0_, comment0_.created_date as col_2_0_ from comment comment0_ inner join user user1_ on (comment0_.id_user=user1_.id) where comment0_.id_post=?
2023-02-21 15:37:33,990 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media3_.url as col_11_0_, postuser4_.had_view as col_12_0_, postuser4_.had_like as col_13_0_, postuser4_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) inner join media media3_ on (postmedia2_.id_media=media3_.id) left outer join post_user postuser4_ on (post1_.id=postuser4_.id_post and postuser4_.id_user=?) where product0_.id_status=6 and product0_.id_category=? order by product0_.id DESC
2023-02-21 15:37:34,235 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:34,235 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:34,239 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:34,239 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:34,270 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:34,273 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:37:34,287 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:34,291 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:37:35,811 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:35,815 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select user0_.id as id1_18_0_, user0_.address as address2_18_0_, user0_.created_date as created_3_18_0_, user0_.email as email4_18_0_, user0_.full_name as full_nam5_18_0_, user0_.gender as gender6_18_0_, user0_.id_role as id_role7_18_0_, user0_.password as password8_18_0_, user0_.phone as phone9_18_0_, user0_.username as usernam10_18_0_ from user user0_ where user0_.id=?
2023-02-21 15:37:35,817 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select avg(order0_.rate) as col_0_0_ from orders order0_ where order0_.id_seller=? and order0_.rate>0
2023-02-21 15:37:35,822 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select order0_.id as col_0_0_, post3_.title as col_1_0_, order0_.price as col_2_0_, type2_.name as col_3_0_, status1_.name as col_4_0_, order0_.created_date as col_5_0_, order0_.updated_date as col_6_0_, order0_.id_redirect as col_7_0_, order0_.rate as col_8_0_, media5_.url as col_9_0_ from orders order0_ inner join status status1_ on (order0_.id_status=status1_.id) inner join type type2_ on (order0_.id_type=type2_.id) inner join post post3_ on (order0_.id_product=post3_.id_product) inner join post_media postmedia4_ on (post3_.id=postmedia4_.id_post and postmedia4_.id_type=3) inner join media media5_ on (postmedia4_.id_media=media5_.id) where (?=0 or order0_.id_seller=?) and (?=0 or order0_.id_buyer=?) and (?=5 or order0_.rate>?) and order0_.id_redirect=0 order by order0_.updated_date DESC
2023-02-21 15:37:58,035 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:58,043 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:58,044 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:37:58,087 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:58,088 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:58,088 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:58,091 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:58,091 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:58,091 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:58,116 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:58,118 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:37:58,123 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:58,125 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:37:58,133 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:37:58,135 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:38:01,435 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:01,444 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:01,446 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:38:01,463 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:01,463 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:01,466 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:01,466 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:01,484 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:01,484 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:01,487 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:38:01,488 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:01,494 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:01,497 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:38:01,511 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:01,513 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:38:02,355 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:02,362 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media3_.url as col_11_0_, postuser4_.had_view as col_12_0_, postuser4_.had_like as col_13_0_, postuser4_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) inner join media media3_ on (postmedia2_.id_media=media3_.id) left outer join post_user postuser4_ on (post1_.id=postuser4_.id_post and postuser4_.id_user=?) where product0_.id_status=6 and (?='' or product0_.name like ?) and (?=0 or product0_.id_user<>?) and (?=0 or product0_.id_category=?) and (?=0 or postuser4_.had_like=?) and (?=0 or postuser4_.had_follow=?) order by product0_.id DESC limit ?
2023-02-21 15:38:02,398 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:02,398 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:02,420 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:02,420 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:02,430 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:02,433 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:38:02,443 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:02,445 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:38:05,709 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:05,723 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:05,726 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:38:05,760 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:05,760 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:05,763 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:05,763 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:05,772 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:05,772 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:05,774 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:38:05,775 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:05,781 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:05,783 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:38:05,801 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:38:05,803 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:40:40,551 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 15:42:44,715 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:42:45,252 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:42:45,258 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:42:45,258 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:42:45,258 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:42:45,321 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:42:45,358 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:42:59,894 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:42:59,897 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select post0_.id as id1_10_, post0_.content as content2_10_, post0_.created_date as created_3_10_, post0_.id_product as id_produ4_10_, post0_.id_user as id_user5_10_, post0_.title as title6_10_, post0_.total_comment as total_co7_10_, post0_.total_follow as total_fo8_10_, post0_.total_like as total_li9_10_, post0_.total_view as total_v10_10_, post0_.updated_date as updated11_10_ from post post0_ where post0_.id_product=?
2023-02-21 15:42:59,901 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select product0_.id as id1_14_0_, product0_.created_date as created_2_14_0_, product0_.id_category as id_categ3_14_0_, product0_.id_confirmer as id_confi4_14_0_, product0_.id_status as id_statu5_14_0_, product0_.id_user as id_user6_14_0_, product0_.name as name7_14_0_, product0_.price as price8_14_0_, product0_.price_verify as price_ve9_14_0_ from product product0_ where product0_.id=?
2023-02-21 15:42:59,904 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select user0_.id as id1_18_0_, user0_.address as address2_18_0_, user0_.created_date as created_3_18_0_, user0_.email as email4_18_0_, user0_.full_name as full_nam5_18_0_, user0_.gender as gender6_18_0_, user0_.id_role as id_role7_18_0_, user0_.password as password8_18_0_, user0_.phone as phone9_18_0_, user0_.username as usernam10_18_0_ from user user0_ where user0_.id=?
2023-02-21 15:42:59,906 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select avg(order0_.rate) as col_0_0_ from orders order0_ where order0_.id_seller=? and order0_.rate>0
2023-02-21 15:42:59,907 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select media0_.id as id1_6_, media0_.type as type2_6_, media0_.url as url3_6_ from media media0_ inner join post_media postmedia1_ on (media0_.id=postmedia1_.id_media) where postmedia1_.id_post=?
2023-02-21 15:42:59,909 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select postmeta0_.id as id1_12_, postmeta0_.description as descript2_12_, postmeta0_.id_post as id_post3_12_, postmeta0_.meta_key as meta_key4_12_, postmeta0_.meta_name as meta_nam5_12_, postmeta0_.meta_value as meta_val6_12_ from post_meta postmeta0_ where postmeta0_.id_post=?
2023-02-21 15:42:59,911 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select user1_.full_name as col_0_0_, comment0_.content as col_1_0_, comment0_.created_date as col_2_0_ from comment comment0_ inner join user user1_ on (comment0_.id_user=user1_.id) where comment0_.id_post=?
2023-02-21 15:42:59,912 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media3_.url as col_11_0_, postuser4_.had_view as col_12_0_, postuser4_.had_like as col_13_0_, postuser4_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) inner join media media3_ on (postmedia2_.id_media=media3_.id) left outer join post_user postuser4_ on (post1_.id=postuser4_.id_post and postuser4_.id_user=?) where product0_.id_status=6 and product0_.id_category=? order by product0_.id DESC
2023-02-21 15:42:59,948 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:42:59,948 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:42:59,952 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:42:59,952 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:42:59,976 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:42:59,978 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:42:59,987 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:42:59,989 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:43:10,335 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:18,030 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:18,039 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select user0_.id as id1_18_, user0_.address as address2_18_, user0_.created_date as created_3_18_, user0_.email as email4_18_, user0_.full_name as full_nam5_18_, user0_.gender as gender6_18_, user0_.id_role as id_role7_18_, user0_.password as password8_18_, user0_.phone as phone9_18_, user0_.username as usernam10_18_ from user user0_ where user0_.username=?
2023-02-21 15:43:18,054 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:18,056 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select sum(postuser0_.had_like) as col_0_0_, sum(postuser0_.had_follow) as col_1_0_ from post_user postuser0_ inner join post post1_ on (postuser0_.id_post=post1_.id) inner join product product2_ on (post1_.id_product=product2_.id) where postuser0_.id_user=? and product2_.id_status=6
2023-02-21 15:43:18,059 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select count(message0_.id) as col_0_0_ from message message0_ where (message0_.id_group in (select groupmembe1_.id_group from group_member groupmembe1_ where groupmembe1_.id_user=?)) and message0_.id_user<>? and message0_.readed=0
2023-02-21 15:43:18,061 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media4_.url as col_11_0_, postuser3_.had_view as col_12_0_, postuser3_.had_like as col_13_0_, postuser3_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) left outer join post_user postuser3_ on (post1_.id=postuser3_.id_post and postuser3_.id_user=?) inner join media media4_ on (postmedia2_.id_media=media4_.id) where product0_.id_status=6 and (?=0 or product0_.id_user<>?) order by post1_.total_like DESC
2023-02-21 15:43:18,063 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media3_.url as col_11_0_, postuser4_.had_view as col_12_0_, postuser4_.had_like as col_13_0_, postuser4_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) inner join media media3_ on (postmedia2_.id_media=media3_.id) inner join post_user postuser4_ on (post1_.id=postuser4_.id_post and postuser4_.id_user=?) where product0_.id_status=6 and postuser4_.had_view=1 order by postuser4_.id DESC
2023-02-21 15:43:18,097 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:18,097 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:18,100 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select sum(postuser0_.had_like) as col_0_0_, sum(postuser0_.had_follow) as col_1_0_ from post_user postuser0_ inner join post post1_ on (postuser0_.id_post=post1_.id) inner join product product2_ on (post1_.id_product=product2_.id) where postuser0_.id_user=? and product2_.id_status=6
2023-02-21 15:43:18,100 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select sum(postuser0_.had_like) as col_0_0_, sum(postuser0_.had_follow) as col_1_0_ from post_user postuser0_ inner join post post1_ on (postuser0_.id_post=post1_.id) inner join product product2_ on (post1_.id_product=product2_.id) where postuser0_.id_user=? and product2_.id_status=6
2023-02-21 15:43:18,103 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select count(message0_.id) as col_0_0_ from message message0_ where (message0_.id_group in (select groupmembe1_.id_group from group_member groupmembe1_ where groupmembe1_.id_user=?)) and message0_.id_user<>? and message0_.readed=0
2023-02-21 15:43:18,103 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select count(message0_.id) as col_0_0_ from message message0_ where (message0_.id_group in (select groupmembe1_.id_group from group_member groupmembe1_ where groupmembe1_.id_user=?)) and message0_.id_user<>? and message0_.readed=0
2023-02-21 15:43:18,106 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:18,106 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:18,108 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select sum(postuser0_.had_like) as col_0_0_, sum(postuser0_.had_follow) as col_1_0_ from post_user postuser0_ inner join post post1_ on (postuser0_.id_post=post1_.id) inner join product product2_ on (post1_.id_product=product2_.id) where postuser0_.id_user=? and product2_.id_status=6
2023-02-21 15:43:18,108 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select sum(postuser0_.had_like) as col_0_0_, sum(postuser0_.had_follow) as col_1_0_ from post_user postuser0_ inner join post post1_ on (postuser0_.id_post=post1_.id) inner join product product2_ on (post1_.id_product=product2_.id) where postuser0_.id_user=? and product2_.id_status=6
2023-02-21 15:43:18,110 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select count(message0_.id) as col_0_0_ from message message0_ where (message0_.id_group in (select groupmembe1_.id_group from group_member groupmembe1_ where groupmembe1_.id_user=?)) and message0_.id_user<>? and message0_.readed=0
2023-02-21 15:43:18,110 [http-nio-8888-exec-5] DEBUG org.hibernate.SQL 103 - select count(message0_.id) as col_0_0_ from message message0_ where (message0_.id_group in (select groupmembe1_.id_group from group_member groupmembe1_ where groupmembe1_.id_user=?)) and message0_.id_user<>? and message0_.readed=0
2023-02-21 15:43:18,117 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:18,118 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select sum(postuser0_.had_like) as col_0_0_, sum(postuser0_.had_follow) as col_1_0_ from post_user postuser0_ inner join post post1_ on (postuser0_.id_post=post1_.id) inner join product product2_ on (post1_.id_product=product2_.id) where postuser0_.id_user=? and product2_.id_status=6
2023-02-21 15:43:18,120 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select count(message0_.id) as col_0_0_ from message message0_ where (message0_.id_group in (select groupmembe1_.id_group from group_member groupmembe1_ where groupmembe1_.id_user=?)) and message0_.id_user<>? and message0_.readed=0
2023-02-21 15:43:18,122 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:18,124 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select sum(postuser0_.had_like) as col_0_0_, sum(postuser0_.had_follow) as col_1_0_ from post_user postuser0_ inner join post post1_ on (postuser0_.id_post=post1_.id) inner join product product2_ on (post1_.id_product=product2_.id) where postuser0_.id_user=? and product2_.id_status=6
2023-02-21 15:43:18,125 [http-nio-8888-exec-8] DEBUG org.hibernate.SQL 103 - select count(message0_.id) as col_0_0_ from message message0_ where (message0_.id_group in (select groupmembe1_.id_group from group_member groupmembe1_ where groupmembe1_.id_user=?)) and message0_.id_user<>? and message0_.readed=0
2023-02-21 15:43:19,476 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:19,477 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:19,477 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:19,480 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select sum(postuser0_.had_like) as col_0_0_, sum(postuser0_.had_follow) as col_1_0_ from post_user postuser0_ inner join post post1_ on (postuser0_.id_post=post1_.id) inner join product product2_ on (post1_.id_product=product2_.id) where postuser0_.id_user=? and product2_.id_status=6
2023-02-21 15:43:19,482 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select sum(postuser0_.had_like) as col_0_0_, sum(postuser0_.had_follow) as col_1_0_ from post_user postuser0_ inner join post post1_ on (postuser0_.id_post=post1_.id) inner join product product2_ on (post1_.id_product=product2_.id) where postuser0_.id_user=? and product2_.id_status=6
2023-02-21 15:43:19,484 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select count(message0_.id) as col_0_0_ from message message0_ where (message0_.id_group in (select groupmembe1_.id_group from group_member groupmembe1_ where groupmembe1_.id_user=?)) and message0_.id_user<>? and message0_.readed=0
2023-02-21 15:43:19,485 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select sum(postuser0_.had_like) as col_0_0_, sum(postuser0_.had_follow) as col_1_0_ from post_user postuser0_ inner join post post1_ on (postuser0_.id_post=post1_.id) inner join product product2_ on (post1_.id_product=product2_.id) where postuser0_.id_user=? and product2_.id_status=6
2023-02-21 15:43:19,486 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select count(message0_.id) as col_0_0_ from message message0_ where (message0_.id_group in (select groupmembe1_.id_group from group_member groupmembe1_ where groupmembe1_.id_user=?)) and message0_.id_user<>? and message0_.readed=0
2023-02-21 15:43:19,488 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:19,489 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:19,491 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select sum(postuser0_.had_like) as col_0_0_, sum(postuser0_.had_follow) as col_1_0_ from post_user postuser0_ inner join post post1_ on (postuser0_.id_post=post1_.id) inner join product product2_ on (post1_.id_product=product2_.id) where postuser0_.id_user=? and product2_.id_status=6
2023-02-21 15:43:19,491 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select count(message0_.id) as col_0_0_ from message message0_ where (message0_.id_group in (select groupmembe1_.id_group from group_member groupmembe1_ where groupmembe1_.id_user=?)) and message0_.id_user<>? and message0_.readed=0
2023-02-21 15:43:19,492 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select sum(postuser0_.had_like) as col_0_0_, sum(postuser0_.had_follow) as col_1_0_ from post_user postuser0_ inner join post post1_ on (postuser0_.id_post=post1_.id) inner join product product2_ on (post1_.id_product=product2_.id) where postuser0_.id_user=? and product2_.id_status=6
2023-02-21 15:43:19,493 [http-nio-8888-exec-9] DEBUG org.hibernate.SQL 103 - select count(message0_.id) as col_0_0_ from message message0_ where (message0_.id_group in (select groupmembe1_.id_group from group_member groupmembe1_ where groupmembe1_.id_user=?)) and message0_.id_user<>? and message0_.readed=0
2023-02-21 15:43:19,495 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:19,495 [http-nio-8888-exec-2] DEBUG org.hibernate.SQL 103 - select count(message0_.id) as col_0_0_ from message message0_ where (message0_.id_group in (select groupmembe1_.id_group from group_member groupmembe1_ where groupmembe1_.id_user=?)) and message0_.id_user<>? and message0_.readed=0
2023-02-21 15:43:19,497 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select sum(postuser0_.had_like) as col_0_0_, sum(postuser0_.had_follow) as col_1_0_ from post_user postuser0_ inner join post post1_ on (postuser0_.id_post=post1_.id) inner join product product2_ on (post1_.id_product=product2_.id) where postuser0_.id_user=? and product2_.id_status=6
2023-02-21 15:43:19,500 [http-nio-8888-exec-1] DEBUG org.hibernate.SQL 103 - select count(message0_.id) as col_0_0_ from message message0_ where (message0_.id_group in (select groupmembe1_.id_group from group_member groupmembe1_ where groupmembe1_.id_user=?)) and message0_.id_user<>? and message0_.readed=0
2023-02-21 15:43:42,814 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:42,817 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select sum(postuser0_.had_like) as col_0_0_, sum(postuser0_.had_follow) as col_1_0_ from post_user postuser0_ inner join post post1_ on (postuser0_.id_post=post1_.id) inner join product product2_ on (post1_.id_product=product2_.id) where postuser0_.id_user=? and product2_.id_status=6
2023-02-21 15:43:42,820 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select count(message0_.id) as col_0_0_ from message message0_ where (message0_.id_group in (select groupmembe1_.id_group from group_member groupmembe1_ where groupmembe1_.id_user=?)) and message0_.id_user<>? and message0_.readed=0
2023-02-21 15:43:42,826 [http-nio-8888-exec-10] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media3_.url as col_11_0_, postuser4_.had_view as col_12_0_, postuser4_.had_like as col_13_0_, postuser4_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) inner join media media3_ on (postmedia2_.id_media=media3_.id) left outer join post_user postuser4_ on (post1_.id=postuser4_.id_post and postuser4_.id_user=?) where product0_.id_status=6 and (?='' or product0_.name like ?) and (?=0 or product0_.id_user<>?) and (?=0 or product0_.id_category=?) and (?=0 or postuser4_.had_like=?) and (?=0 or postuser4_.had_follow=?) order by product0_.id DESC limit ?
2023-02-21 15:43:42,877 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:42,877 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:42,880 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select sum(postuser0_.had_like) as col_0_0_, sum(postuser0_.had_follow) as col_1_0_ from post_user postuser0_ inner join post post1_ on (postuser0_.id_post=post1_.id) inner join product product2_ on (post1_.id_product=product2_.id) where postuser0_.id_user=? and product2_.id_status=6
2023-02-21 15:43:42,880 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select sum(postuser0_.had_like) as col_0_0_, sum(postuser0_.had_follow) as col_1_0_ from post_user postuser0_ inner join post post1_ on (postuser0_.id_post=post1_.id) inner join product product2_ on (post1_.id_product=product2_.id) where postuser0_.id_user=? and product2_.id_status=6
2023-02-21 15:43:42,881 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select count(message0_.id) as col_0_0_ from message message0_ where (message0_.id_group in (select groupmembe1_.id_group from group_member groupmembe1_ where groupmembe1_.id_user=?)) and message0_.id_user<>? and message0_.readed=0
2023-02-21 15:43:42,881 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select count(message0_.id) as col_0_0_ from message message0_ where (message0_.id_group in (select groupmembe1_.id_group from group_member groupmembe1_ where groupmembe1_.id_user=?)) and message0_.id_user<>? and message0_.readed=0
2023-02-21 15:43:42,884 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:42,884 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:42,886 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select sum(postuser0_.had_like) as col_0_0_, sum(postuser0_.had_follow) as col_1_0_ from post_user postuser0_ inner join post post1_ on (postuser0_.id_post=post1_.id) inner join product product2_ on (post1_.id_product=product2_.id) where postuser0_.id_user=? and product2_.id_status=6
2023-02-21 15:43:42,886 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select sum(postuser0_.had_like) as col_0_0_, sum(postuser0_.had_follow) as col_1_0_ from post_user postuser0_ inner join post post1_ on (postuser0_.id_post=post1_.id) inner join product product2_ on (post1_.id_product=product2_.id) where postuser0_.id_user=? and product2_.id_status=6
2023-02-21 15:43:42,888 [http-nio-8888-exec-6] DEBUG org.hibernate.SQL 103 - select count(message0_.id) as col_0_0_ from message message0_ where (message0_.id_group in (select groupmembe1_.id_group from group_member groupmembe1_ where groupmembe1_.id_user=?)) and message0_.id_user<>? and message0_.readed=0
2023-02-21 15:43:42,888 [http-nio-8888-exec-3] DEBUG org.hibernate.SQL 103 - select count(message0_.id) as col_0_0_ from message message0_ where (message0_.id_group in (select groupmembe1_.id_group from group_member groupmembe1_ where groupmembe1_.id_user=?)) and message0_.id_user<>? and message0_.readed=0
2023-02-21 15:43:45,818 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:45,821 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select sum(postuser0_.had_like) as col_0_0_, sum(postuser0_.had_follow) as col_1_0_ from post_user postuser0_ inner join post post1_ on (postuser0_.id_post=post1_.id) inner join product product2_ on (post1_.id_product=product2_.id) where postuser0_.id_user=? and product2_.id_status=6
2023-02-21 15:43:45,824 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select count(message0_.id) as col_0_0_ from message message0_ where (message0_.id_group in (select groupmembe1_.id_group from group_member groupmembe1_ where groupmembe1_.id_user=?)) and message0_.id_user<>? and message0_.readed=0
2023-02-21 15:43:45,829 [http-nio-8888-exec-7] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media3_.url as col_11_0_, postuser4_.had_view as col_12_0_, postuser4_.had_like as col_13_0_, postuser4_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) inner join media media3_ on (postmedia2_.id_media=media3_.id) left outer join post_user postuser4_ on (post1_.id=postuser4_.id_post and postuser4_.id_user=?) where product0_.id_status=6 and (?='' or product0_.name like ?) and (?=0 or product0_.id_user<>?) and (?=0 or product0_.id_category=?) and (?=0 or postuser4_.had_like=?) and (?=0 or postuser4_.had_follow=?) order by product0_.id DESC limit ?
2023-02-21 15:43:48,510 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select category0_.id as col_0_0_, category0_.name as col_1_0_, category0_.content as col_2_0_, media1_.id as col_3_0_, media1_.url as col_4_0_ from category category0_ left outer join media media1_ on (category0_.id_media=media1_.id)
2023-02-21 15:43:48,513 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select sum(postuser0_.had_like) as col_0_0_, sum(postuser0_.had_follow) as col_1_0_ from post_user postuser0_ inner join post post1_ on (postuser0_.id_post=post1_.id) inner join product product2_ on (post1_.id_product=product2_.id) where postuser0_.id_user=? and product2_.id_status=6
2023-02-21 15:43:48,515 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select count(message0_.id) as col_0_0_ from message message0_ where (message0_.id_group in (select groupmembe1_.id_group from group_member groupmembe1_ where groupmembe1_.id_user=?)) and message0_.id_user<>? and message0_.readed=0
2023-02-21 15:43:48,524 [http-nio-8888-exec-4] DEBUG org.hibernate.SQL 103 - select product0_.id as col_0_0_, product0_.id_category as col_1_0_, product0_.id_user as col_2_0_, product0_.name as col_3_0_, product0_.price as col_4_0_, product0_.price_verify as col_5_0_, post1_.id as col_6_0_, post1_.total_view as col_7_0_, post1_.total_like as col_8_0_, post1_.total_follow as col_9_0_, post1_.total_comment as col_10_0_, media3_.url as col_11_0_, postuser4_.had_view as col_12_0_, postuser4_.had_like as col_13_0_, postuser4_.had_follow as col_14_0_ from product product0_ inner join post post1_ on (product0_.id=post1_.id_product) inner join post_media postmedia2_ on (post1_.id=postmedia2_.id_post and postmedia2_.id_type=3) inner join media media3_ on (postmedia2_.id_media=media3_.id) left outer join post_user postuser4_ on (post1_.id=postuser4_.id_post and postuser4_.id_user=?) where product0_.id_status=6 and (?='' or product0_.name like ?) and (?=0 or product0_.id_user<>?) and (?=0 or product0_.id_category=?) and (?=0 or postuser4_.had_like=?) and (?=0 or postuser4_.had_follow=?) order by product0_.id DESC limit ?
2023-02-21 15:45:40,554 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 15:50:40,559 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 15:55:40,575 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 16:00:40,587 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 16:01:38,509 [MessageBroker-7] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 70]
2023-02-21 16:05:40,590 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 16:10:40,599 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 16:15:40,615 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 16:20:40,631 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 16:25:40,645 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 16:30:40,658 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 16:31:38,508 [MessageBroker-1] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 77]
2023-02-21 16:35:40,668 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 16:40:40,683 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 16:45:40,691 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 16:50:40,703 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 16:55:40,709 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 17:00:40,732 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 17:01:38,513 [MessageBroker-2] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 84]
2023-02-21 17:05:40,752 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 17:10:40,766 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 17:15:40,772 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 17:20:40,787 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 17:25:40,802 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 17:30:40,818 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 17:31:38,521 [MessageBroker-4] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 91]
2023-02-21 17:35:40,834 [MessageBroker-7] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 17:40:40,849 [MessageBroker-7] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 17:45:40,858 [MessageBroker-7] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 17:50:40,868 [MessageBroker-7] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 17:55:40,881 [MessageBroker-7] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 18:00:40,893 [MessageBroker-7] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 18:01:38,520 [MessageBroker-3] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 98]
2023-02-21 18:05:40,897 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 18:10:40,912 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 18:15:40,928 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 18:20:40,943 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 18:25:40,960 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 18:30:40,975 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 18:31:38,522 [MessageBroker-7] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 105]
2023-02-21 18:35:40,992 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 18:40:41,032 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 18:45:41,038 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 18:50:41,062 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 18:55:41,079 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 19:00:41,097 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 19:01:38,514 [MessageBroker-8] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 112]
2023-02-21 19:05:41,107 [MessageBroker-3] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 19:10:41,120 [MessageBroker-3] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 19:15:41,123 [MessageBroker-3] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 19:20:41,137 [MessageBroker-3] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 19:25:41,143 [MessageBroker-3] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 19:30:41,147 [MessageBroker-3] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 19:31:38,516 [MessageBroker-2] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 119]
2023-02-21 19:35:41,158 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 19:40:41,176 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 19:45:41,192 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 19:50:41,195 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 19:55:41,203 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 20:00:41,211 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 20:01:38,509 [MessageBroker-3] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 126]
2023-02-21 20:05:41,229 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 20:10:41,237 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 20:15:41,244 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 20:20:41,247 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 20:25:41,261 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 20:30:41,270 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 20:31:38,514 [MessageBroker-4] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 133]
2023-02-21 20:35:41,287 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 20:40:41,305 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 20:45:41,315 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 20:50:41,330 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 20:55:41,349 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 21:00:41,372 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 21:01:38,520 [MessageBroker-2] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 140]
2023-02-21 21:05:41,381 [MessageBroker-6] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 21:10:41,388 [MessageBroker-6] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 21:15:41,402 [MessageBroker-6] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 21:20:41,420 [MessageBroker-6] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 21:25:41,430 [MessageBroker-6] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 21:30:41,436 [MessageBroker-6] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 21:31:38,522 [MessageBroker-1] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 147]
2023-02-21 21:35:41,443 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 21:40:41,460 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 21:45:41,467 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 21:50:41,472 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 21:55:41,485 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 22:00:41,497 [MessageBroker-4] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 22:01:38,521 [MessageBroker-6] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 154]
2023-02-21 22:05:41,505 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 22:10:41,518 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 22:15:41,522 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 22:20:41,538 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 22:25:41,554 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 22:30:41,574 [MessageBroker-2] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 22:31:38,517 [MessageBroker-4] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 161]
2023-02-21 22:35:41,586 [MessageBroker-1] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 22:40:41,600 [MessageBroker-1] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 22:45:41,614 [MessageBroker-1] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 22:50:41,628 [MessageBroker-1] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 22:55:41,643 [MessageBroker-1] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 23:00:41,658 [MessageBroker-1] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 23:01:38,519 [MessageBroker-2] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 168]
2023-02-21 23:05:41,675 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 23:10:41,691 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 23:15:41,696 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 23:20:41,712 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 23:25:41,723 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 23:30:41,736 [MessageBroker-8] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 23:31:38,519 [MessageBroker-1] INFO  org.springframework.web.socket.config.WebSocketMessageBrokerStats 124 - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 1, completed tasks = 175]
2023-02-21 23:35:41,756 [MessageBroker-3] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 23:40:41,769 [MessageBroker-3] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 23:45:41,788 [MessageBroker-3] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 23:50:41,809 [MessageBroker-3] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
2023-02-21 23:55:41,828 [MessageBroker-3] DEBUG org.hibernate.SQL 103 - select order0_.id as id1_9_, order0_.created_date as created_2_9_, order0_.id_buyer as id_buyer3_9_, order0_.id_product as id_produ4_9_, order0_.id_redirect as id_redir5_9_, order0_.id_seller as id_selle6_9_, order0_.id_status as id_statu7_9_, order0_.id_type as id_type8_9_, order0_.price as price9_9_, order0_.rate as rate10_9_, order0_.updated_date as updated11_9_ from orders order0_ where order0_.created_date<=? and order0_.id_status=1
